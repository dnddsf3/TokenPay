@startuml
class id.tu.service.config.CustomUserDetails {
- Long id
- String username
- String password
- String email
- boolean isActive
- Collection<? extends GrantedAuthority> authorities
+ Collection<? extends GrantedAuthority> getAuthorities()
+ String getPassword()
+ String getUsername()
+ boolean isAccountNonExpired()
+ boolean isAccountNonLocked()
+ boolean isCredentialsNonExpired()
+ boolean isEnabled()
+ Long getId()
+ String getEmail()
}


class id.tu.service.config.SecurityConfig {
- CustomUserDetailsService userDetailsService
+ PasswordEncoder passwordEncoder()
+ DaoAuthenticationProvider authenticationProvider()
+ AuthenticationManager authenticationManager(AuthenticationConfiguration)
+ SecurityFilterChain securityFilterChain(HttpSecurity)
}


class id.tu.service.config.OpenAPIConfig {
- String devUrl
- String prodUrl
+ OpenAPI myOpenAPI()
}


class id.tu.service.config.CustomUserDetailsService {
- UserRepository userRepository
+ UserDetails loadUserByUsername(String)
}


class id.tu.service.config.CorsConfig {
+ CorsConfigurationSource corsConfigurationSource()
}



org.springframework.security.core.userdetails.UserDetails <|.. id.tu.service.config.CustomUserDetails
org.springframework.security.core.userdetails.UserDetailsService <|.. id.tu.service.config.CustomUserDetailsService
@enduml